/* Localized versions of all CSSM error code messages */

/* The key is the CSSM error name, as defined in various header files */
/* The value should be the name of the error in some form, and a brief explanation of the error.  These two fields should be separated by a hyphen, in order to aid parsing which may want only the error name, or only the explanation. */

CSSM_BASE_ERROR = "CSSM base error";
CSSM_CSSM_PRIVATE_ERROR = "CSSM private error";
CSSM_CSP_BASE_ERROR = "CSP base error";
CSSM_CSP_PRIVATE_ERROR = "CSP private error";
CSSM_DL_BASE_ERROR = "DL/MDS base error";
CSSM_DL_PRIVATE_ERROR = "DL/MDS private error";
CSSM_CL_BASE_ERROR = "CL base error";
CSSM_CL_PRIVATE_ERROR = "CL private error";
CSSM_TP_BASE_ERROR = "TP base error";
CSSM_TP_PRIVATE_ERROR = "TP private error";
CSSM_KR_BASE_ERROR = "KR base error";
CSSM_KR_PRIVATE_ERROR = "KR private error";
CSSM_AC_BASE_ERROR = "AC base error";
CSSM_AC_PRIVATE_ERROR = "AC private error";
CSSMERR_CSSM_INVALID_ADDIN_HANDLE = "CSSM invalid add-in handle";
CSSMERR_CSSM_NOT_INITIALIZED = "CSSM not initialized";
CSSMERR_CSSM_INVALID_HANDLE_USAGE = "CSSM invalid handle usage";
CSSMERR_CSSM_PVC_REFERENT_NOT_FOUND = "CSSM PVC referent not found";
CSSMERR_CSSM_FUNCTION_INTEGRITY_FAIL = "CSSM function integrity failure";
CSSM_ERRCODE_INTERNAL_ERROR = "CSSM internal error";
CSSM_ERRCODE_MEMORY_ERROR = "CSSM memory error";
CSSM_ERRCODE_MDS_ERROR = "CSSM MDS error";
CSSM_ERRCODE_INVALID_POINTER = "CSSM invalid pointer";
CSSM_ERRCODE_INVALID_INPUT_POINTER = "CSSM invalid input pointer";
CSSM_ERRCODE_INVALID_OUTPUT_POINTER = "CSSM invalid output pointer";
CSSM_ERRCODE_FUNCTION_NOT_IMPLEMENTED = "CSSM function not implemented";
CSSM_ERRCODE_SELF_CHECK_FAILED = "CSSM self check failed";
CSSM_ERRCODE_OS_ACCESS_DENIED = "CSSM OS access denied";
CSSM_ERRCODE_FUNCTION_FAILED = "CSSM function failed";
CSSM_ERRCODE_MODULE_MANIFEST_VERIFY_FAILED = "CSSM module manifest verify failed";
CSSM_ERRCODE_INVALID_GUID = "CSSM invalid GUID";
CSSM_ERRCODE_OPERATION_AUTH_DENIED = "CSSM operation authorization denied";
CSSM_ERRCODE_OBJECT_USE_AUTH_DENIED = "CSSM object use authorization denied";
CSSM_ERRCODE_OBJECT_MANIP_AUTH_DENIED = "CSSM object manipulation outhorization denied";
CSSM_ERRCODE_OBJECT_ACL_NOT_SUPPORTED = "CSSM object ACL not supported";
CSSM_ERRCODE_OBJECT_ACL_REQUIRED = "CSSM object ACL required";
CSSM_ERRCODE_INVALID_ACCESS_CREDENTIALS = "CSSM invalid access credentials";
CSSM_ERRCODE_INVALID_ACL_BASE_CERTS = "CSSM invalid ACL base certificates";
CSSM_ERRCODE_ACL_BASE_CERTS_NOT_SUPPORTED = "CSSM ACL base certificates not supported";
CSSM_ERRCODE_INVALID_SAMPLE_VALUE = "CSSM invalid sample value";
CSSM_ERRCODE_SAMPLE_VALUE_NOT_SUPPORTED = "CSSM sample value not supported";
CSSM_ERRCODE_INVALID_ACL_SUBJECT_VALUE = "CSSM invalid ACL subject value";
CSSM_ERRCODE_ACL_SUBJECT_TYPE_NOT_SUPPORTED = "CSSM ACL subject type not supported";
CSSM_ERRCODE_INVALID_ACL_CHALLENGE_CALLBACK = "CSSM invalid ACL challenge callback";
CSSM_ERRCODE_ACL_CHALLENGE_CALLBACK_FAILED = "CSSM ACL challenge callback failed";
CSSM_ERRCODE_INVALID_ACL_ENTRY_TAG = "CSSM invalid ACL entry tag";
CSSM_ERRCODE_ACL_ENTRY_TAG_NOT_FOUND = "CSSM ACL entry tag not found";
CSSM_ERRCODE_INVALID_ACL_EDIT_MODE = "CSSM invalid ACL edit mode";
CSSM_ERRCODE_ACL_CHANGE_FAILED = "CSSM ACL change failed";
CSSM_ERRCODE_INVALID_NEW_ACL_ENTRY = "CSSM invalid new ACL entry";
CSSM_ERRCODE_INVALID_NEW_ACL_OWNER = "CSSM invalid new ACL owner";
CSSM_ERRCODE_ACL_DELETE_FAILED = "CSSM ACL delete failed";
CSSM_ERRCODE_ACL_REPLACE_FAILED = "CSSM ACL replace failed";
CSSM_ERRCODE_ACL_ADD_FAILED = "CSSM ACL add failed";
CSSM_ERRCODE_INVALID_CONTEXT_HANDLE = "CSSM invalid context handle";
CSSM_ERRCODE_INCOMPATIBLE_VERSION = "CSSM incompatible version";
CSSM_ERRCODE_INVALID_CERTGROUP_POINTER = "CSSM invalid certificate group pointer";
CSSM_ERRCODE_INVALID_CERT_POINTER = "CSSM invalid certificate pointer";
CSSM_ERRCODE_INVALID_CRL_POINTER = "CSSM invalid CRL pointer";
CSSM_ERRCODE_INVALID_FIELD_POINTER = "CSSM invalid field pointer";
CSSM_ERRCODE_INVALID_DATA = "CSSM invalid data";
CSSM_ERRCODE_CRL_ALREADY_SIGNED = "CSSM CRL already signed";
CSSM_ERRCODE_INVALID_NUMBER_OF_FIELDS = "CSSM invalid number of fields";
CSSM_ERRCODE_VERIFICATION_FAILURE = "CSSM verification failure";
CSSM_ERRCODE_INVALID_DB_HANDLE = "CSSM invalid DB handle";
CSSM_ERRCODE_PRIVILEGE_NOT_GRANTED = "CSSM privilege not granted";
CSSM_ERRCODE_INVALID_DB_LIST = "CSSM invalid DB list";
CSSM_ERRCODE_INVALID_DB_LIST_POINTER = "CSSM invalid DB list pointer";
CSSM_ERRCODE_UNKNOWN_FORMAT = "CSSM unknown format";
CSSM_ERRCODE_UNKNOWN_TAG = "CSSM unknown tag";
CSSM_ERRCODE_INVALID_CSP_HANDLE = "CSSM invalid CSP handle";
CSSM_ERRCODE_INVALID_DL_HANDLE = "CSSM invalid DL handle";
CSSM_ERRCODE_INVALID_CL_HANDLE = "CSSM invalid CL handle";
CSSM_ERRCODE_INVALID_TP_HANDLE = "CSSM invalid TP handle";
CSSM_ERRCODE_INVALID_KR_HANDLE = "CSSM invalid KR handle";
CSSM_ERRCODE_INVALID_AC_HANDLE = "CSSM invalid AC handle";
CSSM_ERRCODE_INVALID_PASSTHROUGH_ID = "CSSM invalid passthrough ID";
CSSM_ERRCODE_INVALID_NETWORK_ADDR = "CSSM invalid network address";
CSSM_ERRCODE_INVALID_CRYPTO_DATA = "CSSM invalid crypto data";
CSSMERR_CSSM_INTERNAL_ERROR = "CSSM internal error";
CSSMERR_CSSM_MEMORY_ERROR = "CSSM memory error";
CSSMERR_CSSM_MDS_ERROR = "CSSM MDS error";
CSSMERR_CSSM_INVALID_POINTER = "CSSM invalid pointer";
CSSMERR_CSSM_INVALID_INPUT_POINTER = "CSSM invalid input pointer";
CSSMERR_CSSM_INVALID_OUTPUT_POINTER = "CSSM invalid output pointer";
CSSMERR_CSSM_FUNCTION_NOT_IMPLEMENTED = "CSSM function not implemented";
CSSMERR_CSSM_SELF_CHECK_FAILED = "CSSM self check failed";
CSSMERR_CSSM_OS_ACCESS_DENIED = "CSSM OS access denied";
CSSMERR_CSSM_FUNCTION_FAILED = "CSSM function failed";
CSSMERR_CSSM_MODULE_MANIFEST_VERIFY_FAILED = "CSSM module manifest verify failed";
CSSMERR_CSSM_INVALID_GUID = "CSSM invalid GUID";
CSSMERR_CSSM_INVALID_CONTEXT_HANDLE = "CSSM invalid context handle";
CSSMERR_CSSM_INCOMPATIBLE_VERSION = "CSSM incompatible version";
CSSMERR_CSSM_PRIVILEGE_NOT_GRANTED = "CSSM privilege not granted";
CSSM_CSSM_BASE_CSSM_ERROR = "CSSM base CSSM error";
CSSMERR_CSSM_SCOPE_NOT_SUPPORTED = "CSSM scope not supported";
CSSMERR_CSSM_PVC_ALREADY_CONFIGURED = "CSSM PVC already configured";
CSSMERR_CSSM_INVALID_PVC = "CSSM invalid PVC";
CSSMERR_CSSM_EMM_LOAD_FAILED = "CSSM EMM load failed";
CSSMERR_CSSM_EMM_UNLOAD_FAILED = "CSSM EMM unload failed";
CSSMERR_CSSM_ADDIN_LOAD_FAILED = "CSSM add-in load failed";
CSSMERR_CSSM_INVALID_KEY_HIERARCHY = "CSSM invalid key hierarchy";
CSSMERR_CSSM_ADDIN_UNLOAD_FAILED = "CSSM add-in unload failed";
CSSMERR_CSSM_LIB_REF_NOT_FOUND = "CSSM lib ref not found";
CSSMERR_CSSM_INVALID_ADDIN_FUNCTION_TABLE = "CSSM invalid add-in function table";
CSSMERR_CSSM_EMM_AUTHENTICATE_FAILED = "CSSM EMM authentication failed";
CSSMERR_CSSM_ADDIN_AUTHENTICATE_FAILED = "CSSM add-in authentication failed";
CSSMERR_CSSM_INVALID_SERVICE_MASK = "CSSM invalid service mask";
CSSMERR_CSSM_MODULE_NOT_LOADED = "CSSM module not loaded";
CSSMERR_CSSM_INVALID_SUBSERVICEID = "CSSM invalid subservice ID";
CSSMERR_CSSM_BUFFER_TOO_SMALL = "CSSM buffer too small";
CSSMERR_CSSM_INVALID_ATTRIBUTE = "CSSM invalid attribute";
CSSMERR_CSSM_ATTRIBUTE_NOT_IN_CONTEXT = "CSSM attribute not in context";
CSSMERR_CSSM_MODULE_MANAGER_INITIALIZE_FAIL = "CSSM module manager initialize fail";
CSSMERR_CSSM_MODULE_MANAGER_NOT_FOUND = "CSSM module manager not found";
CSSMERR_CSSM_EVENT_NOTIFICATION_CALLBACK_NOT_FOUND = "CSSM event notification callback not found";
CSSMERR_TP_INTERNAL_ERROR = "TP internal error";
CSSMERR_TP_MEMORY_ERROR = "TP memory error";
CSSMERR_TP_MDS_ERROR = "TP MDS error";
CSSMERR_TP_INVALID_POINTER = "TP invalid pointer";
CSSMERR_TP_INVALID_INPUT_POINTER = "TP invalid input pointer";
CSSMERR_TP_INVALID_OUTPUT_POINTER = "TP invalid output pointer";
CSSMERR_TP_FUNCTION_NOT_IMPLEMENTED = "TP function not implemented";
CSSMERR_TP_SELF_CHECK_FAILED = "TP self check failed";
CSSMERR_TP_OS_ACCESS_DENIED = "TP OS access denied";
CSSMERR_TP_FUNCTION_FAILED = "TP function failed";
CSSMERR_TP_INVALID_CONTEXT_HANDLE = "TP invalid context handle";
CSSMERR_TP_INVALID_DATA = "TP invalid data";
CSSMERR_TP_INVALID_DB_LIST = "TP invalid DB list";
CSSMERR_TP_INVALID_CERTGROUP_POINTER = "TP invalid certificate group pointer";
CSSMERR_TP_INVALID_CERT_POINTER = "TP invalid certificate pointer";
CSSMERR_TP_INVALID_CRL_POINTER = "TP invalid CRL pointer";
CSSMERR_TP_INVALID_FIELD_POINTER = "TP invalid field pointer";
CSSMERR_TP_INVALID_NETWORK_ADDR = "TP invalid network address";
CSSMERR_TP_CRL_ALREADY_SIGNED = "TP CRL already signed";
CSSMERR_TP_INVALID_NUMBER_OF_FIELDS = "TP invalid number of fields";
CSSMERR_TP_VERIFICATION_FAILURE = "TP verification failure";
CSSMERR_TP_INVALID_DB_HANDLE = "TP invalid DB handle";
CSSMERR_TP_UNKNOWN_FORMAT = "TP unknown format";
CSSMERR_TP_UNKNOWN_TAG = "TP unknown tag";
CSSMERR_TP_INVALID_PASSTHROUGH_ID = "TP invalid passthrough ID";
CSSMERR_TP_INVALID_CSP_HANDLE = "TP invalid CSP handle";
CSSMERR_TP_INVALID_DL_HANDLE = "TP invalid DL handle";
CSSMERR_TP_INVALID_CL_HANDLE = "TP/DL invalid CL handle";
CSSMERR_TP_INVALID_DB_LIST_POINTER = "TP invalid DB list pointer";
CSSM_TP_BASE_TP_ERROR = "TP base TP error";
CSSMERR_TP_INVALID_CALLERAUTH_CONTEXT_POINTER = "TP invalid caller authentication context pointer";
CSSMERR_TP_INVALID_IDENTIFIER_POINTER = "TP invalid identifier pointer";
CSSMERR_TP_INVALID_KEYCACHE_HANDLE = "TP invalid keycache handle";
CSSMERR_TP_INVALID_CERTGROUP = "TP invalid certificate group";
CSSMERR_TP_INVALID_CRLGROUP = "TP invalid CRL group";
CSSMERR_TP_INVALID_CRLGROUP_POINTER = "TP invalid CRL group pointer";
CSSMERR_TP_AUTHENTICATION_FAILED = "TP authentication failed";
CSSMERR_TP_CERTGROUP_INCOMPLETE = "TP certificate group incomplete";
CSSMERR_TP_CERTIFICATE_CANT_OPERATE = "TP certificate can't operate";
CSSMERR_TP_CERT_EXPIRED = "TP certificate expired";
CSSMERR_TP_CERT_NOT_VALID_YET = "TP certificate not valid yet";
CSSMERR_TP_CERT_REVOKED = "TP certificate revoked";
CSSMERR_TP_CERT_SUSPENDED = "TP certificate suspended";
CSSMERR_TP_INSUFFICIENT_CREDENTIALS = "TP insufficient credentials";
CSSMERR_TP_INVALID_ACTION = "TP invalid action";
CSSMERR_TP_INVALID_ACTION_DATA = "TP invalid action data";
CSSMERR_TP_INVALID_ANCHOR_CERT = "TP invalid anchor certificate";
CSSMERR_TP_INVALID_AUTHORITY = "TP invalid authority";
CSSMERR_TP_VERIFY_ACTION_FAILED = "TP verify action failed";
CSSMERR_TP_INVALID_CERTIFICATE = "TP invalid certificate";
CSSMERR_TP_INVALID_CERT_AUTHORITY = "TP invalid certificate authority";
CSSMERR_TP_INVALID_CRL_AUTHORITY = "TP invalid CRL authority";
CSSMERR_TP_INVALID_CRL_ENCODING = "TP invalid CRL encoding";
CSSMERR_TP_INVALID_CRL_TYPE = "TP invalid CRL type";
CSSMERR_TP_INVALID_CRL = "TP invalid CRL";
CSSMERR_TP_INVALID_FORM_TYPE = "TP invalid form type";
CSSMERR_TP_INVALID_ID = "TP invalid ID";
CSSMERR_TP_INVALID_IDENTIFIER = "TP invalid identifier";
CSSMERR_TP_INVALID_INDEX = "TP invalid index";
CSSMERR_TP_INVALID_NAME = "TP invalid name";
CSSMERR_TP_INVALID_POLICY_IDENTIFIERS = "TP invalid policy identifiers";
CSSMERR_TP_INVALID_TIMESTRING = "TP invalid time string";
CSSMERR_TP_INVALID_REASON = "TP invalid reason";
CSSMERR_TP_INVALID_REQUEST_INPUTS = "TP invalid request inputs";
CSSMERR_TP_INVALID_RESPONSE_VECTOR = "TP invalid response vector";
CSSMERR_TP_INVALID_SIGNATURE = "TP invalid signature";
CSSMERR_TP_INVALID_STOP_ON_POLICY = "TP invalid stop on policy";
CSSMERR_TP_INVALID_CALLBACK = "TP invalid callback";
CSSMERR_TP_INVALID_TUPLE = "TP invalid tuple";
CSSMERR_TP_NOT_SIGNER = "TP not signer";
CSSMERR_TP_NOT_TRUSTED = "TP not trusted";
CSSMERR_TP_NO_DEFAULT_AUTHORITY = "TP no default authority";
CSSMERR_TP_REJECTED_FORM = "TP rejected form";
CSSMERR_TP_REQUEST_LOST = "TP request lost";
CSSMERR_TP_REQUEST_REJECTED = "TP request rejected";
CSSMERR_TP_UNSUPPORTED_ADDR_TYPE = "TP unsupported address type";
CSSMERR_TP_UNSUPPORTED_SERVICE = "TP unsupported service";
CSSMERR_TP_INVALID_TUPLEGROUP_POINTER = "TP invalid tuple group pointer";
CSSMERR_TP_INVALID_TUPLEGROUP = "TP invalid tuple group";
CSSMERR_AC_INTERNAL_ERROR = "AC internal error";
CSSMERR_AC_MEMORY_ERROR = "AC memory error";
CSSMERR_AC_MDS_ERROR = "AC MDS error";
CSSMERR_AC_INVALID_POINTER = "AC invalid pointer";
CSSMERR_AC_INVALID_INPUT_POINTER = "AC invalid input pointer";
CSSMERR_AC_INVALID_OUTPUT_POINTER = "AC invalid output pointer";
CSSMERR_AC_FUNCTION_NOT_IMPLEMENTED = "AC function not implemented";
CSSMERR_AC_SELF_CHECK_FAILED = "AC self check failed";
CSSMERR_AC_OS_ACCESS_DENIED = "AC OS access denied";
CSSMERR_AC_FUNCTION_FAILED = "AC function failed";
CSSMERR_AC_INVALID_CONTEXT_HANDLE = "AC invalid context handle";
CSSMERR_AC_INVALID_DATA = "AC invalid data";
CSSMERR_AC_INVALID_DB_LIST = "AC invalid DB list";
CSSMERR_AC_INVALID_PASSTHROUGH_ID = "AC invalid passthrough ID";
CSSMERR_AC_INVALID_DL_HANDLE = "AC invalid DL handle";
CSSMERR_AC_INVALID_CL_HANDLE = "AC invalid CL handle";
CSSMERR_AC_INVALID_TP_HANDLE = "AC invalid TP handle";
CSSMERR_AC_INVALID_DB_HANDLE = "AC invalid DB handle";
CSSMERR_AC_INVALID_DB_LIST_POINTER = "AC invalid DB list pointer";
CSSM_AC_BASE_AC_ERROR = "AC base AC error";
CSSMERR_AC_INVALID_BASE_ACLS = "AC invalid base ACL's";
CSSMERR_AC_INVALID_TUPLE_CREDENTIALS = "AC invalid tuple credentials";
CSSMERR_AC_INVALID_ENCODING = "AC invalid encoding";
CSSMERR_AC_INVALID_VALIDITY_PERIOD = "AC invalid validity period";
CSSMERR_AC_INVALID_REQUESTOR = "AC invalid requestor";
CSSMERR_AC_INVALID_REQUEST_DESCRIPTOR = "AC invalid request descriptor";
CSSMERR_CL_INTERNAL_ERROR = "CL internal error";
CSSMERR_CL_MEMORY_ERROR = "CL memory error";
CSSMERR_CL_MDS_ERROR = "CL MDS error";
CSSMERR_CL_INVALID_POINTER = "CL invalid pointer";
CSSMERR_CL_INVALID_INPUT_POINTER = "CL invalid input pointer";
CSSMERR_CL_INVALID_OUTPUT_POINTER = "CL invalid output pointer";
CSSMERR_CL_FUNCTION_NOT_IMPLEMENTED = "CL function not implemented";
CSSMERR_CL_SELF_CHECK_FAILED = "CL self check failed";
CSSMERR_CL_OS_ACCESS_DENIED = "CL OS access denied";
CSSMERR_CL_FUNCTION_FAILED = "CL function failed";
CSSMERR_CL_INVALID_CONTEXT_HANDLE = "CL invalid context handle";
CSSMERR_CL_INVALID_CERTGROUP_POINTER = "CL invalid certificate group pointer";
CSSMERR_CL_INVALID_CERT_POINTER = "CL invalid certificate pointer";
CSSMERR_CL_INVALID_CRL_POINTER = "CL invalid CRL pointer";
CSSMERR_CL_INVALID_FIELD_POINTER = "CL invalid field pointer";
CSSMERR_CL_INVALID_DATA = "CL invalid data";
CSSMERR_CL_CRL_ALREADY_SIGNED = "CL CRL already signed";
CSSMERR_CL_INVALID_NUMBER_OF_FIELDS = "CL invalid number of fields";
CSSMERR_CL_VERIFICATION_FAILURE = "CL verification failure";
CSSMERR_CL_UNKNOWN_FORMAT = "CL unknown format";
CSSMERR_CL_UNKNOWN_TAG = "CL unknown tag";
CSSMERR_CL_INVALID_PASSTHROUGH_ID = "CL invalid passthrough ID";
CSSM_CL_BASE_CL_ERROR = "CL base CL error";
CSSMERR_CL_INVALID_BUNDLE_POINTER = "CL invalid bundle pointer";
CSSMERR_CL_INVALID_CACHE_HANDLE = "CL invalid cache handle";
CSSMERR_CL_INVALID_RESULTS_HANDLE = "CL invalid results handle";
CSSMERR_CL_INVALID_BUNDLE_INFO = "CL invalid bundle info";
CSSMERR_CL_INVALID_CRL_INDEX = "CL invalid CRL index";
CSSMERR_CL_INVALID_SCOPE = "CL invalid scope";
CSSMERR_CL_NO_FIELD_VALUES = "CL no field values";
CSSMERR_CL_SCOPE_NOT_SUPPORTED = "CL scope not supported";
CSSMERR_DL_INTERNAL_ERROR = "DL internal error";
CSSMERR_DL_MEMORY_ERROR = "DL memory error";
CSSMERR_DL_MDS_ERROR = "DL MDS error";
CSSMERR_DL_INVALID_POINTER = "DL invalid pointer";
CSSMERR_DL_INVALID_INPUT_POINTER = "DL invalid input pointer";
CSSMERR_DL_INVALID_OUTPUT_POINTER = "DL invalid output pointer";
CSSMERR_DL_FUNCTION_NOT_IMPLEMENTED = "DL function not implemented";
CSSMERR_DL_SELF_CHECK_FAILED = "DL self check failed";
CSSMERR_DL_OS_ACCESS_DENIED = "DL OS access denied";
CSSMERR_DL_FUNCTION_FAILED = "DL function failed";
CSSMERR_DL_INVALID_CSP_HANDLE = "DL invalid CSP handle";
CSSMERR_DL_INVALID_DL_HANDLE = "DL invalid DL handle";
CSSMERR_DL_INVALID_DB_LIST_POINTER = "DL invalid DB list pointer";
CSSMERR_DL_OPERATION_AUTH_DENIED = "DL operation authentication denied";
CSSMERR_DL_OBJECT_USE_AUTH_DENIED = "DL object use authentication denied";
CSSMERR_DL_OBJECT_MANIP_AUTH_DENIED = "DL object manipulation authentication denied";
CSSMERR_DL_OBJECT_ACL_NOT_SUPPORTED = "DL object ACL not supported";
CSSMERR_DL_OBJECT_ACL_REQUIRED = "DL object ACL required";
CSSMERR_DL_INVALID_ACCESS_CREDENTIALS = "DL invalid access credentials";
CSSMERR_DL_INVALID_ACL_BASE_CERTS = "DL invalid ACL base certificates";
CSSMERR_DL_ACL_BASE_CERTS_NOT_SUPPORTED = "DL ACL base certificates not supported";
CSSMERR_DL_INVALID_SAMPLE_VALUE = "DL invalid sample value";
CSSMERR_DL_SAMPLE_VALUE_NOT_SUPPORTED = "DL sample value not supported";
CSSMERR_DL_INVALID_ACL_SUBJECT_VALUE = "DL invalid ACL subject value";
CSSMERR_DL_ACL_SUBJECT_TYPE_NOT_SUPPORTED = "DL ACL subject type not supported";
CSSMERR_DL_INVALID_ACL_CHALLENGE_CALLBACK = "DL invalid ACL challenge callback";
CSSMERR_DL_ACL_CHALLENGE_CALLBACK_FAILED = "DL ACL challenge callback failed";
CSSMERR_DL_INVALID_ACL_ENTRY_TAG = "DL invalid ACL entry tag";
CSSMERR_DL_ACL_ENTRY_TAG_NOT_FOUND = "DL ACL entry tag not found";
CSSMERR_DL_INVALID_ACL_EDIT_MODE = "DL invalid ACL edit mode";
CSSMERR_DL_ACL_CHANGE_FAILED = "DL ACL change failed";
CSSMERR_DL_INVALID_NEW_ACL_ENTRY = "DL invalid new ACL entry";
CSSMERR_DL_INVALID_NEW_ACL_OWNER = "DL invalid new ACL owner";
CSSMERR_DL_ACL_DELETE_FAILED = "DL ACL delete failed";
CSSMERR_DL_ACL_REPLACE_FAILED = "DL ACL replace failed";
CSSMERR_DL_ACL_ADD_FAILED = "DL ACL add failed";
CSSMERR_DL_INVALID_DB_HANDLE = "DL invalid DB handle";
CSSMERR_DL_INVALID_PASSTHROUGH_ID = "DL invalid passthrough ID";
CSSMERR_DL_INVALID_NETWORK_ADDR = "DL invalid network address";
CSSM_DL_BASE_DL_ERROR = "DL base DL error";
CSSMERR_DL_DATABASE_CORRUPT = "DL database corrupt";
CSSMERR_DL_INVALID_RECORD_INDEX = "DL invalid record index";
CSSMERR_DL_INVALID_RECORDTYPE = "DL invalid record type";
CSSMERR_DL_INVALID_FIELD_NAME = "DL invalid field name";
CSSMERR_DL_UNSUPPORTED_FIELD_FORMAT = "DL unsupported field format";
CSSMERR_DL_UNSUPPORTED_INDEX_INFO = "DL unsupported index info";
CSSMERR_DL_UNSUPPORTED_LOCALITY = "DL unsupported locality";
CSSMERR_DL_UNSUPPORTED_NUM_ATTRIBUTES = "DL unsupported number of attributes";
CSSMERR_DL_UNSUPPORTED_NUM_INDEXES = "DL unsupported number of indexes";
CSSMERR_DL_UNSUPPORTED_NUM_RECORDTYPES = "DL unsupported number of record types";
CSSMERR_DL_UNSUPPORTED_RECORDTYPE = "DL unsupported record type";
CSSMERR_DL_FIELD_SPECIFIED_MULTIPLE = "DL field specified multiple";
CSSMERR_DL_INCOMPATIBLE_FIELD_FORMAT = "DL incompatible field format";
CSSMERR_DL_INVALID_PARSING_MODULE = "DL invalid parsing module";
CSSMERR_DL_INVALID_DB_NAME = "DL invalid DB name";
CSSMERR_DL_DATASTORE_DOESNOT_EXIST = "DL data store does not exist";
CSSMERR_DL_DATASTORE_ALREADY_EXISTS = "DL data store already exists";
CSSMERR_DL_DB_LOCKED = "DL DB locked";
CSSMERR_DL_DATASTORE_IS_OPEN = "DL data store is open";
CSSMERR_DL_RECORD_NOT_FOUND = "DL record not found";
CSSMERR_DL_MISSING_VALUE = "DL missing value";
CSSMERR_DL_UNSUPPORTED_QUERY = "DL unsupported query";
CSSMERR_DL_UNSUPPORTED_QUERY_LIMITS = "DL unsupported query limits";
CSSMERR_DL_UNSUPPORTED_NUM_SELECTION_PREDS = "DL unsupported number of selection preds";
CSSMERR_DL_UNSUPPORTED_OPERATOR = "DL unsupported operator";
CSSMERR_DL_INVALID_RESULTS_HANDLE = "DL invalid results handle";
CSSMERR_DL_INVALID_DB_LOCATION = "DL invalid DB location";
CSSMERR_DL_INVALID_ACCESS_REQUEST = "DL invalid access request";
CSSMERR_DL_INVALID_INDEX_INFO = "DL invalid index info";
CSSMERR_DL_INVALID_SELECTION_TAG = "DL invalid selection tag";
CSSMERR_DL_INVALID_NEW_OWNER = "DL invalid new owner";
CSSMERR_DL_INVALID_RECORD_UID = "DL invalid record UID";
CSSMERR_DL_INVALID_UNIQUE_INDEX_DATA = "DL invalid unique index data";
CSSMERR_DL_INVALID_MODIFY_MODE = "DL invalid modify mode";
CSSMERR_DL_INVALID_OPEN_PARAMETERS = "DL invalid open parameters";
CSSMERR_DL_RECORD_MODIFIED = "DL record modified";
CSSMERR_DL_ENDOFDATA = "DL end of data";
CSSMERR_DL_INVALID_QUERY = "DL invalid query";
CSSMERR_DL_INVALID_VALUE = "DL invalid value";
CSSMERR_DL_MULTIPLE_VALUES_UNSUPPORTED = "DL multiple values unsupported";
CSSMERR_DL_STALE_UNIQUE_RECORD = "DL stale unique record";
CSSMERR_CSP_INTERNAL_ERROR = "Internal CSP error";
CSSMERR_CSP_MEMORY_ERROR = "CSP memory error";
CSSMERR_CSP_MDS_ERROR = "CSP MDS error";
CSSMERR_CSP_INVALID_POINTER = "CSP invalid pointer error";
CSSMERR_CSP_INVALID_INPUT_POINTER = "CSP invalid input pointer error";
CSSMERR_CSP_INVALID_OUTPUT_POINTER = "CSP invalid output pointer error";
CSSMERR_CSP_FUNCTION_NOT_IMPLEMENTED = "CSP function not implemented";
CSSMERR_CSP_SELF_CHECK_FAILED = "CSP self-check failed";
CSSMERR_CSP_OS_ACCESS_DENIED = "CSP OS access denied";
CSSMERR_CSP_FUNCTION_FAILED = "CSP function failed";
CSSMERR_CSP_OPERATION_AUTH_DENIED = "CSP operation authorization denied";
CSSMERR_CSP_OBJECT_USE_AUTH_DENIED = "CSP object usage authorization denied";
CSSMERR_CSP_OBJECT_MANIP_AUTH_DENIED = "CSP object manipulation authorization denied";
CSSMERR_CSP_OBJECT_ACL_NOT_SUPPORTED = "CSP object ACL not supported";
CSSMERR_CSP_OBJECT_ACL_REQUIRED = "CSP object ACL required";
CSSMERR_CSP_INVALID_ACCESS_CREDENTIALS = "CSP invalid access credentials";
CSSMERR_CSP_INVALID_ACL_BASE_CERTS = "CSP invalid ACL base certificate(s)";
CSSMERR_CSP_ACL_BASE_CERTS_NOT_SUPPORTED = "CSP ACL base certificate(s) not supported";
CSSMERR_CSP_INVALID_SAMPLE_VALUE = "CSP invalid sample value";
CSSMERR_CSP_SAMPLE_VALUE_NOT_SUPPORTED = "CSP sample value not supported";
CSSMERR_CSP_INVALID_ACL_SUBJECT_VALUE = "CSP invalid ACL subject value";
CSSMERR_CSP_ACL_SUBJECT_TYPE_NOT_SUPPORTED = "CSP ACL subject type not supported";
CSSMERR_CSP_INVALID_ACL_CHALLENGE_CALLBACK = "CSP invalid ACL challenge callback";
CSSMERR_CSP_ACL_CHALLENGE_CALLBACK_FAILED = "CSP ACL challenge callback failed";
CSSMERR_CSP_INVALID_ACL_ENTRY_TAG = "CSP invalid ACL entry tag";
CSSMERR_CSP_ACL_ENTRY_TAG_NOT_FOUND = "CSP ACL entry tag not found";
CSSMERR_CSP_INVALID_ACL_EDIT_MODE = "CSP invalid ACL edit mode";
CSSMERR_CSP_ACL_CHANGE_FAILED = "CSP ACL change failed";
CSSMERR_CSP_INVALID_NEW_ACL_ENTRY = "CSP invalid new ACL entry";
CSSMERR_CSP_INVALID_NEW_ACL_OWNER = "CSP invalid new ACL owner";
CSSMERR_CSP_ACL_DELETE_FAILED = "CSP ACL delete failed";
CSSMERR_CSP_ACL_REPLACE_FAILED = "CSP ACL replace failed";
CSSMERR_CSP_ACL_ADD_FAILED = "CSP ACL add failed";
CSSMERR_CSP_INVALID_CONTEXT_HANDLE = "CSP invalid context handle";
CSSMERR_CSP_PRIVILEGE_NOT_GRANTED = "CSP privilege not granted";
CSSMERR_CSP_INVALID_DATA = "CSP invalid date";
CSSMERR_CSP_INVALID_PASSTHROUGH_ID = "CSP invalid passthrough ID";
CSSMERR_CSP_INVALID_CRYPTO_DATA = "CSP invalid crypto data";
CSSM_CSP_BASE_CSP_ERROR = "CSP base error";
CSSMERR_CSP_INPUT_LENGTH_ERROR = "CSP input length error - An input buffer does not have the expected length";
CSSMERR_CSP_OUTPUT_LENGTH_ERROR = "CSP output length error - An output buffer was supplied, but it was too small to hold the output data";
CSSMERR_CSP_PRIVILEGE_NOT_SUPPORTED = "CSP privilege not supported - The CSP does not support the requested privilege level";
CSSMERR_CSP_DEVICE_ERROR = "CSP device error - Indicates that a hardware subsystem has failed in some way";
CSSMERR_CSP_DEVICE_MEMORY_ERROR = "CSP device memory error - Indicates that a hardware subsystem has run out of memory";
CSSMERR_CSP_ATTACH_HANDLE_BUSY = "CSP attach handle busy - The attach handle used to attempt an operation currently has an operation in progress that will not allow other operations to begin until it completes";
CSSMERR_CSP_NOT_LOGGED_IN = "CSP not logged in - The operation can not be performed without authenticating using CSSM_CSP_Login";
CSSMERR_CSP_INVALID_KEY = "CSP invalid key - The supplied key is invalid or incompatible with the operation";
CSSMERR_CSP_INVALID_KEY_REFERENCE = "CSP invalid key reference - The CSSM_KEY contains a reference that does not indicate a key in the CSP";
CSSMERR_CSP_INVALID_KEY_CLASS = "CSP invalid key class - The supplied key is not the proper class (i.e. Public key is supplied for a private key operation)";
CSSMERR_CSP_ALGID_MISMATCH = "CSP algorithm ID mismatch - The algorithm ID in the key header does not match the algorithm to be performed";
CSSMERR_CSP_KEY_USAGE_INCORRECT = "CSP key usage incorrect - The key does not have the proper usage flags to perform the operation";
CSSMERR_CSP_KEY_BLOB_TYPE_INCORRECT = "CSP key blob type incorrect - The key data blob type is not the correct type (i.e. The key is wrapped when a raw key or reference is expected)";
CSSMERR_CSP_KEY_HEADER_INCONSISTENT = "CSP key header inconsistent - The key header information is corrupt, or does not match the key data";
CSSMERR_CSP_UNSUPPORTED_KEY_FORMAT = "CSP unsupported key format - The key format is not supported by the CSP";
CSSMERR_CSP_UNSUPPORTED_KEY_SIZE = "CSP unsupported key size - The key size is not supported or not allowed by the current privilege or supported by the CSP";
CSSMERR_CSP_INVALID_KEY_POINTER = "CSP invalid key pointer - The pointer to a CSSM_KEY structure is invalid";
CSSMERR_CSP_INVALID_KEYUSAGE_MASK = "CSP invalid key usage mask - A requested key usage is not valid for the key type, or two of the uses are not compatible";
CSSMERR_CSP_UNSUPPORTED_KEYUSAGE_MASK = "CSP unsupported key usage mask - The key usage mask is valid, but not supported by the CSP";
CSSMERR_CSP_INVALID_KEYATTR_MASK = "CSP invalid key attributes mask - A requested key attribute is not valid for the key type, or two of the attributes are not compatible";
CSSMERR_CSP_UNSUPPORTED_KEYATTR_MASK = "CSP unsupported key attribute mask - The key attribute mask is valid, but not supported by the CSP";
CSSMERR_CSP_INVALID_KEY_LABEL = "CSP invalid key label - The label specified for a key is invalid";
CSSMERR_CSP_UNSUPPORTED_KEY_LABEL = "CSP unsupported key label - The CSP does not support the use of labels for the key";
CSSMERR_CSP_INVALID_KEY_FORMAT = "CSP invalid key format";
CSSMERR_CSP_INVALID_DATA_COUNT = "CSP invalid data count - Input vector length is invalid; buffer count can not be zero";
CSSMERR_CSP_VECTOR_OF_BUFS_UNSUPPORTED = "CSP vector of buffers unsupported - The CSP only supports input of a single buffer per API call";
CSSMERR_CSP_INVALID_INPUT_VECTOR = "CSP invalid input vector - A vector of buffers for input does not contain valid information";
CSSMERR_CSP_INVALID_OUTPUT_VECTOR = "CSP invalid output vector - A vector of buffers for output does not contain valid information";
CSSMERR_CSP_INVALID_CONTEXT = "CSP invalid context - The cryptographic context and operation types are not compatible";
CSSMERR_CSP_INVALID_ALGORITHM = "CSP invalid algorithm - Algorithm is not supported by the CSP";
CSSMERR_CSP_INVALID_ATTR_KEY = "CSP invalid key - The cryptographic key is invalid";
CSSMERR_CSP_MISSING_ATTR_KEY = "CSP missing key - The cryptographic key is missing";
CSSMERR_CSP_INVALID_ATTR_INIT_VECTOR = "CSP invalid init vector - The algorithm mode required an initialization vector and it is invalid";
CSSMERR_CSP_MISSING_ATTR_INIT_VECTOR = "CSP missing init vector - The algorithm mode required an initialization vector and it is missing";
CSSMERR_CSP_INVALID_ATTR_SALT = "CSP invalid salt - The operation requires salt and it is invalid";
CSSMERR_CSP_MISSING_ATTR_SALT = "CSP missing salt - The operation requires salt and it is missing";
CSSMERR_CSP_INVALID_ATTR_PADDING = "CSP invalid padding - An algorithm mode with padding is specified and the padding type is invalid";
CSSMERR_CSP_MISSING_ATTR_PADDING = "CSP invalid padding - An algorithm mode with padding is specified and the padding type is missing";
CSSMERR_CSP_INVALID_ATTR_RANDOM = "CSP invalid random data - The operation required random data and it is invalid";
CSSMERR_CSP_MISSING_ATTR_RANDOM = "CSP missing random data - The operation required random data and it is missing";
CSSMERR_CSP_INVALID_ATTR_SEED = "CSP invalid seed - The algorithm requires a seed value and it is invalid";
CSSMERR_CSP_MISSING_ATTR_SEED = "CSP missing seed - The algorithm requires a seed value and it is missing";
CSSMERR_CSP_INVALID_ATTR_PASSPHRASE = "CSP invalid passphrase - The operation requires a passphrase value and it is invalid";
CSSMERR_CSP_MISSING_ATTR_PASSPHRASE = "CSP missing passphrase - The operation requires a passphrase value and it is missing";
CSSMERR_CSP_INVALID_ATTR_KEY_LENGTH = "CSP invalid key length - The operation requires a key length and it is invalid";
CSSMERR_CSP_MISSING_ATTR_KEY_LENGTH = "CSP missing key length - The operation requires a key length and it is missing";
CSSMERR_CSP_INVALID_ATTR_BLOCK_SIZE = "CSP invalid block size - The algorithm has a configurable block size and the value is invalid";
CSSMERR_CSP_MISSING_ATTR_BLOCK_SIZE = "CSP missing block size - The algorithm has a configurable block size and the value is missing";
CSSMERR_CSP_INVALID_ATTR_OUTPUT_SIZE = "CSP invalid output size - The algorithm has a configurable output size and the value is invalid";
CSSMERR_CSP_MISSING_ATTR_OUTPUT_SIZE = "CSP missing output size - The algorithm has a configurable output size and the value is missing";
CSSMERR_CSP_INVALID_ATTR_ROUNDS = "CSP invalid rounds - The algorithm has a configurable number of rounds and the value is invalid";
CSSMERR_CSP_MISSING_ATTR_ROUNDS = "CSP missing rounds - The algorithm has a configurable number of rounds and the value is missing";
CSSMERR_CSP_INVALID_ATTR_ALG_PARAMS = "CSP invalid algorithm parameters - The algorithm required a set of parameters and they are invalid";
CSSMERR_CSP_MISSING_ATTR_ALG_PARAMS = "CSP missing algorithm parameters - The algorithm required a set of parameters and they are missing or invalid.";
CSSMERR_CSP_INVALID_ATTR_LABEL = "CSP invalid label - The operation creates an object that requires a label and it is invalid";
CSSMERR_CSP_MISSING_ATTR_LABEL = "CSP missing label - The operation creates an object that requires a label and it is missing";
CSSMERR_CSP_INVALID_ATTR_KEY_TYPE = "CSP invalid key type - The operation requires a key type and the value is invalid";
CSSMERR_CSP_MISSING_ATTR_KEY_TYPE = "CSP missing key type - The operation requires a key type and the value is missing";
CSSMERR_CSP_INVALID_ATTR_MODE = "CSP invalid mode - The algorithm requires a mode to be specified and it is invalid";
CSSMERR_CSP_MISSING_ATTR_MODE = "CSP missing mode - The algorithm requires a mode to be specified and it is missing";
CSSMERR_CSP_INVALID_ATTR_EFFECTIVE_BITS = "CSP invalid effective bits - The algorithm has a configurable number of effective bits and the value is invalid";
CSSMERR_CSP_MISSING_ATTR_EFFECTIVE_BITS = "CSP missing effective bits - The algorithm has a configurable number of effective bits and the value it missing";
CSSMERR_CSP_INVALID_ATTR_START_DATE = "CSP invalid start date - The operation creates an object with a validity date and the starting date is invalid";
CSSMERR_CSP_MISSING_ATTR_START_DATE = "CSP missing start date - The operation creates an object with a validity date and the starting date is missing";
CSSMERR_CSP_INVALID_ATTR_END_DATE = "CSP invalid end date - The operation creates an object with a validity date and the ending date is invalid";
CSSMERR_CSP_MISSING_ATTR_END_DATE = "CSP missing end date - The operation creates an object with a validity date and the ending date is missing";
CSSMERR_CSP_INVALID_ATTR_VERSION = "CSP invalid version - The operation requires a version number and the value is invalid";
CSSMERR_CSP_MISSING_ATTR_VERSION = "CSP missing version - The operation requires a version number and the value is missing";
CSSMERR_CSP_INVALID_ATTR_PRIME = "CSP invalid prime - The operation requires a prime value and it is invalid";
CSSMERR_CSP_MISSING_ATTR_PRIME = "CSP missing prime - The operation requires a prime value and it is missing";
CSSMERR_CSP_INVALID_ATTR_BASE = "CSP invalid base - The operation requires a base value and it is invalid";
CSSMERR_CSP_MISSING_ATTR_BASE = "CSP missing base - The operation requires a base value and it is missing";
CSSMERR_CSP_INVALID_ATTR_SUBPRIME = "CSP invalid subprime - The operation requires a sub-prime value and it is invalid";
CSSMERR_CSP_MISSING_ATTR_SUBPRIME = "CSP missing subprime - The operation requires a sub-prime value and it is missing";
CSSMERR_CSP_INVALID_ATTR_ITERATION_COUNT = "CSP invalid iteration count - The operation has a configurable iteration count and the value is invalid";
CSSMERR_CSP_MISSING_ATTR_ITERATION_COUNT = "CSP missing iteration count - The operation has a configurable iteration count and the value is missing";
CSSMERR_CSP_INVALID_ATTR_DL_DB_HANDLE = "CSP invalid Dl/DB handle - The operation can store new objects in a specific location and the value is invalid";
CSSMERR_CSP_MISSING_ATTR_DL_DB_HANDLE = "CSP missing DL/DB handle - The operation can store new objects in a specific location and the value is missing";
CSSMERR_CSP_INVALID_ATTR_ACCESS_CREDENTIALS = "CSP invalid access credentials - The operation requires access credentials and they are invalid";
CSSMERR_CSP_MISSING_ATTR_ACCESS_CREDENTIALS = "CSP missing access credentials - The operation requires access credentials and they are missing";
CSSMERR_CSP_INVALID_ATTR_PUBLIC_KEY_FORMAT = "CSP invalid public key format - The resulting public key format is invalid";
CSSMERR_CSP_MISSING_ATTR_PUBLIC_KEY_FORMAT = "CSP missing public key format - The resulting public key format is missing";
CSSMERR_CSP_INVALID_ATTR_PRIVATE_KEY_FORMAT = "CSP invalid private key format - The resulting private key format is invalid";
CSSMERR_CSP_MISSING_ATTR_PRIVATE_KEY_FORMAT = "CSP missing private key format - The resulting private key format is missing";
CSSMERR_CSP_INVALID_ATTR_SYMMETRIC_KEY_FORMAT = "CSP invalid symmetric key format - The resulting symmetric key format is invalid";
CSSMERR_CSP_MISSING_ATTR_SYMMETRIC_KEY_FORMAT = "CSP missing symmetric key format - The resulting symmetric key format is missing";
CSSMERR_CSP_INVALID_ATTR_WRAPPED_KEY_FORMAT = "CSP invalid wrapped key format - The resulting wrapped key format is invalid";
CSSMERR_CSP_MISSING_ATTR_WRAPPED_KEY_FORMAT = "CSP missing wrapped key format - The resulting wrapped key format is missing";
CSSMERR_CSP_STAGED_OPERATION_IN_PROGRESS = "CSP staged operation in progress - The application has already started a staged operation using the specified CC";
CSSMERR_CSP_STAGED_OPERATION_NOT_STARTED = "CSP staged operation not started - An \"Update\" or \"Final\" API has been called without calling the corresponding \"Init\"";
CSSMERR_CSP_VERIFY_FAILED = "CSP verify failed - The signature is not valid";
CSSMERR_CSP_INVALID_SIGNATURE = "CSP invalid signature - The signature data is not in the proper format";
CSSMERR_CSP_QUERY_SIZE_UNKNOWN = "CSP query size unknown - The size of the output data can not be determined";
CSSMERR_CSP_BLOCK_SIZE_MISMATCH = "CSP block size mismatch - The size of the input is not equal to a multiple of the algorithm block size; valid for symmetric block ciphers in an unpadded mode";
CSSMERR_CSP_PRIVATE_KEY_NOT_FOUND = "CSP private key not found - The private key matching the public key was not found";
CSSMERR_CSP_PUBLIC_KEY_INCONSISTENT = "CSP public key inconsistent - The public key specified does not match the private key being unwrapped";
CSSMERR_CSP_DEVICE_VERIFY_FAILED = "CSP device verify failed - The logical device could not be verified by the service provider";
CSSMERR_CSP_INVALID_LOGIN_NAME = "CSP invalid login name - The login name is not recognized by the CSP";
CSSMERR_CSP_ALREADY_LOGGED_IN = "CSP already logged in - The device is already logged in and can not be reauthenticated";
CSSMERR_CSP_PRIVATE_KEY_ALREADY_EXISTS = "CSP private key already exists - The private key already exists in the CSP";
CSSMERR_CSP_KEY_LABEL_ALREADY_EXISTS = "CSP key label already exists - Key label already exists in the CSP";
CSSMERR_CSP_INVALID_DIGEST_ALGORITHM = "CSP invalid digest algorithm - The digest algorithm passed in to the Sign/Verify operation is invalid";
CSSMERR_CSP_CRYPTO_DATA_CALLBACK_FAILED = "CSP crypto data callback failed";